name: Release Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - main    # PR의 base branch가 main인 경우만

jobs:
  build-and-deploy:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/') }}
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. AWS 로그인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3. ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bothulu
          IMAGE_TAG: ${{ github.event.pull_request.head.ref }}
        run: |
          VERSION=${IMAGE_TAG#release/}
          echo "Using version tag: $VERSION"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION

      # 5. 라즈베리 파이에 SSH 접속하여 배포
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          script: |
            VERSION=${{ github.event.pull_request.head.ref }}
            VERSION=${VERSION#release/}
            echo "Deploying version: $VERSION"

            docker pull ${{ steps.login-ecr.outputs.registry }}/bothulu:$VERSION
            docker stop bothulu || true
            docker rm bothulu || true
            docker run -d --name bothulu -p 80:80 ${{ steps.login-ecr.outputs.registry }}/bothulu:$VERSION
